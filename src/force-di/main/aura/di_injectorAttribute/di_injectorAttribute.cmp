<aura:component>

    <aura:attribute name="name"
                    type="String"
                    description="Name of the injected attribute."
                    required="true"/>

    <aura:attribute name="value"
                    type="Object"
                    description="Value of the injected attribute."
                    required="true"/>

    <aura:attribute name="dataType"
                    type="String"
                    default="String"
                    description="Specific data type the value represents. Helps when mapping values to things like input variables of flows."
                    required="false"/>

    <!-- Added by Leon Kempers: Register attribute value change 
        
        fix the issue where attribute values passed to a Lightning Component were only 
        set upon initialization, and subsequent changes were not handled

         added a change handler for the "value" attribute, and registered the 
         di_injectorAttributeChangeEvent. When the "value" attribute changes, it fires 
         the di_injectorAttributeChangeEvent, and passes along the name and the new value 
         of the changed attribute
    -->
    <aura:handler name="change" value="{!v.value}" action="{!c.handleValueChange}"/>
    <aura:registerevent name="attributeChangeEvent" type="c:di_injectorAttributeChangeEvent" />
    

</aura:component>
